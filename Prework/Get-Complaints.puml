@startuml
title Get Pothole Complaints Sequence Diagram

actor Client
participant "API Gateway" as APIGateway
participant Lambda
participant GetComplaintsActivity
participant PotholeComplaintsDao
participant ModelConverter
database DynamoDB

Client -> APIGateway : GET /complaints/:page
activate Client
APIGateway -> Lambda
activate Lambda
activate GetComplaintsActivity
activate PotholeComplaintsDao
Lambda -> GetComplaintsActivity :  handleRequest(GetComplaintsRequest, Context)
GetComplaintsActivity -> PotholeComplaintsDao : getComplaintsForPage(requestedPage : Integer)
PotholeComplaintsDao -> DynamoDB : load playlist by page
alt if page does not exist
    PotholeComplaintsDao <-- DynamoDB : null
    Lambda <-- PotholeComplaintsDao : null
    APIGateway <-- Lambda
    Client <-- APIGateway : 404 Response
else otherwise, continue
end

PotholeComplaintsDao <-- DynamoDB : List<PotholeComplaint>(25)
GetComplaintsActivity <-- PotholeComplaintsDao : PotholeComplaint}
GetComplaintsActivity -> ModelConverter : toPotholeComplaintsModel(PotholeComplaint)
activate ModelConverter
GetComplaintsActivity <-- ModelConverter : PotholeComplaintModel
deactivate ModelConverter
Lambda <-- GetComplaintsActivity : GetComplaintsResult
APIGateway <-- Lambda
deactivate PotholeComplaintsDao
deactivate GetComplaintsActivity
deactivate Lambda
Client <-- APIGateway : 200 Response
deactivate Client

@enduml
