plugins {
    id 'java'
    id 'checkstyle'
    id 'jacoco'
    id 'com.github.spotbugs' version '4.7.1'
    id 'com.adarshr.test-logger' version '3.0.0'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'net.ltgt.apt-idea' version "0.15"
}

group = 'potholeComplaintManagementApp'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation 'com.google.code.gson:gson:2.7'
    implementation 'com.google.dagger:dagger:2.15'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.15'

    implementation 'com.amazonaws:aws-lambda-java-core:1.2.2'
    implementation 'com.amazonaws:aws-lambda-java-events:3.11.1'
    implementation 'org.apache.logging.log4j:log4j-api:2.17.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.1'
    runtimeOnly 'org.apache.logging.log4j:log4j-slf4j18-impl:2.17.1'
    runtimeOnly 'com.amazonaws:aws-lambda-java-log4j2:1.5.1'

    // AWS SDK v1 dependencies
    implementation 'com.amazonaws:aws-java-sdk-core:1.12.88' // Update version as necessary
    implementation 'com.amazonaws:aws-java-sdk-lambda:1.12.88' // Update version as necessary

    implementation 'com.amazonaws:aws-java-sdk-dynamodb:1.12.88' // Update version as necessary

    implementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'

    testImplementation 'org.mockito:mockito-core:3.4.6'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.4.6'
    implementation 'org.testng:testng:6.14.3'
    implementation 'org.apache.commons:commons-lang3:3.0'
}

tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file("src/generated/java")
}

test {
    useJUnitPlatform()
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('./lib') {
        from configurations.runtimeClasspath
    }
}
